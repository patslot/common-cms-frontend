[{"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/index.js":"1","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/App.js":"2","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/reportWebVitals.js":"3","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/components/Post.js":"4","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Home.js":"5","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Create.js":"6","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/components/Nav.js":"7","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/SinglePost.js":"8","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/context/UserContext.js":"9","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Login.js":"10","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Signup.js":"11","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/context/LikesContext.js":"12"},{"size":732,"mtime":1607938721243,"results":"13","hashOfConfig":"14"},{"size":835,"mtime":1607596140716,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607407259474,"results":"16","hashOfConfig":"14"},{"size":3508,"mtime":1607411326576,"results":"17","hashOfConfig":"14"},{"size":862,"mtime":1607595119658,"results":"18","hashOfConfig":"14"},{"size":2212,"mtime":1607934126437,"results":"19","hashOfConfig":"14"},{"size":665,"mtime":1607596118817,"results":"20","hashOfConfig":"14"},{"size":6123,"mtime":1608018050865,"results":"21","hashOfConfig":"14"},{"size":375,"mtime":1607583709326,"results":"22","hashOfConfig":"14"},{"size":2057,"mtime":1607595309788,"results":"23","hashOfConfig":"14"},{"size":2095,"mtime":1607655004573,"results":"24","hashOfConfig":"14"},{"size":1659,"mtime":1608018160003,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1u3onam",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/index.js",[],["54","55"],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/App.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/reportWebVitals.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/components/Post.js",[],["56","57"],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Home.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Create.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/components/Nav.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/SinglePost.js",["58","59"],"import React, {useState, useEffect, useContext} from 'react'\nimport Post from '../components/Post'\nimport {UserContext} from '../context/UserContext'\nimport {LikesContext} from '../context/LikesContext'\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({match,history})=>{\n    const {id} = match.params\n    // console.log(\"id\", id)\n    const hostname = 'http://localhost:1337' ; \n\n    const {likesGiven, reloader} = useContext(LikesContext)\n    console.log(\"likesGiven\" , likesGiven)\n\n    const isPostAlreadyLiked = (()=>{\n        return likesGiven.find(like => {\n            return like.post && (String(like.post.id) === id)\n        })\n    })()\n    \n    console.log(\"Is Post Already Liked\", isPostAlreadyLiked)\n\n    const {user, setUser} = useContext(UserContext)\n    // console.log(user);\n    // console.log(setUser);\n    const [post, setPost] = useState({}); \n    const [Loading, setLoading] = useState(true);\n    const [error, setError] = useState(''); \n    const [edit, setEdit] = useState(false);\n    const [description, setDescription] = useState('')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const fetchPost = async () =>{\n        try{\n            const response = await fetch(`${hostname}/posts/${id}`)\n            const data = await response.json()\n            // console.log(\"data\", data)\n            setPost(data);\n            setDescription(data.description);\n            setLoading(false)\n        }\n        catch(err){\n            console.log(\"error - \", err)\n            setError(err);\n        }\n       \n    }\n    const handleLike = async () => {\n        try{\n            const response = await fetch(`${hostname}/likes`,{\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${user.jwt}`, \n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    post: parseInt(id)\n                })\n            })\n            const data = await response.json()\n            console.log(data)\n            if(data.message){\n                setError(data.message);\n                return \n            }\n            fetchPost();\n            reloader();\n        }catch(err){\n            console.log(\"exception \", err)\n            setError(err);\n        }\n    }\n    const handleRemoveLike = async () => {\n        try{\n            const response = await fetch(`${hostname}/likes/${id}`,{\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${user.jwt}`\n                }\n            })\n            const data = await response.json()\n            console.log(data)\n            fetchPost();\n            reloader();\n        }catch(err){\n            console.log(\"exception \",err)\n            // setError(err);\n        }\n    }\n    const handleDelete = async () =>{\n        const response = await fetch(`${hostname}/posts/${id}`,{\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${user.jwt}`\n            }\n        })\n        const data = await response.json()\n        console.log(data)\n        history.push('/')\n    }\n    const handleEditSubmit = async (event) =>{\n        event.preventDefault()\n        const response = await fetch(`${hostname}/posts/${id}`,{\n            method: 'PUT',\n            headers: {\n                'Content-Type' : 'application/json',\n                'Authorization': `Bearer ${user.jwt}`\n            },\n            body: JSON.stringify({description})\n        })\n        const data = await response.json();\n        fetchPost();\n        console.log('handleEditSubmit return: ', data);\n    }\n    useEffect(fetchPost,[])\n\n    return (\n        <div className=\"SinglePost\">\n            { !error && \n                <>\n                { Loading && <p>Loading...</p>}\n                { !Loading &&\n                    <>\n                        {post.id &&\n                            <>\n                                <Post \n                                    description={post.description}\n                                    likes={post.likes}\n                                    url={post.image && post.image.url} \n                                />\n                                {user && \n                                    <>\n                                        {isPostAlreadyLiked && \n                                        <button onClick={handleRemoveLike}>Remove Like</button>\n                                        }\n                                        {!isPostAlreadyLiked && \n                                            <button onClick={handleLike}>Like</button> \n                                        }\n                                    </>\n                                }\n                                {user && \n                                    <>\n                                        <button onClick={handleDelete}>Delete this Post</button>\n                                        <button onClick={()=>setEdit(true)}>Edit this Post</button>\n                                        {edit && \n                                            <form onSubmit={handleEditSubmit}>\n                                                <input \n                                                    value={description} \n                                                    onChange={(event)=>setDescription(event.target.value)}\n                                                    placeholder=\"New Description\"\n                                                />\n                                                <button>Confirm</button>\n                                            </form>\n                                        }\n                                    </>\n                                }\n                            </>\n                        }\n                        {!post.id &&\n                            <p> 404 - not found</p>\n                        }\n                    </>\n                }\n                </>\n            }\n            { error && <p>{error}</p>}\n        </div>\n    )\n}\n","/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/context/UserContext.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Login.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/pages/Signup.js",[],"/Applications/MAMP/htdocs/strapi/react_frontend/common-cms-frontend/src/context/LikesContext.js",["60"],"import React, {useState, useEffect, createContext, useContext} from 'react'\nimport {UserContext} from './UserContext'\n\nexport const LikesContext = createContext(null)\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({children}) =>{\n    const hostname = 'http://localhost:1337'\n    const {user} = useContext(UserContext)\n    const [likesGiven, setLikesGiven] = useState([])\n    const [likesReceived, setLikesReceived] = useState([])\n\n\n    const reloader = () =>{\n        if(user){\n            const loadLikesGiven = async ()=>{\n                const response = await fetch(`${hostname}/likes/given?user=${user.user.id}`,{\n                    headers:{\n                        'Authorization': `Bearer ${user.jwt}`\n                    }\n                })\n                const data = await response.json()\n                setLikesGiven(data)\n            }\n            loadLikesGiven()\n            const loadLikesRecevied = async ()=>{\n                const response = await fetch(`${hostname}/likes/received?post.author=${user.user.id}`,{\n                    headers:{\n                        'Authorization': `Bearer ${user.jwt}`\n                    }\n                })\n                const data = await response.json()\n                setLikesReceived(data)\n            }\n            loadLikesRecevied()\n        }\n    }\n    useEffect(()=>{\n        reloader()\n    },[user])\n\n    console.log('Likes Given: ', likesGiven)\n    console.log('Likes Recevied: ', likesReceived)\n\n    return (\n        <LikesContext.Provider value={{likesGiven, likesReceived, reloader}}>\n            {children}\n        </LikesContext.Provider>\n    )\n}",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":22,"column":18,"nodeType":"69","messageId":"70","endLine":22,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":113,"column":25,"nodeType":"73","endLine":113,"endColumn":27,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":40,"column":7,"nodeType":"73","endLine":40,"endColumn":13,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'reloader'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [id]",{"range":"85","text":"86"},"Update the dependencies array to be: [reloader, user]",{"range":"87","text":"88"},[3708,3710],"[id]",[1399,1405],"[reloader, user]"]